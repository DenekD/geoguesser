{"version":3,"sources":["components/GuessMap.js/GuessMap.module.css","UI/Modal/Modal.module.css","pages/GameResult/GameResult.module.css","pages/StartGame/StartGame.module.css","components/PlayerDashbord/PlayerDashbord.module.css","UI/LoadingSpinner/LoadingSpinner.module.css","components/Avatar/Avatar.module.css","components/Layout/Layout.module.css","pages/SignUp/SignUp.module.css","components/GuessMap.js/GuessMap.js","mapStyles.js","components/Avatar/Avatar.js","UI/Modal/Modal.js","components/Layout/Layout.js","store/actions/authActions.js","pages/StartGame/StartGame.js","store/actions/mapActions.js","components/PlayerDashbord/PlayerDashbord.js","UI/LoadingSpinner/LoadingSpinner.js","pages/StreetView/StreetView.js","pages/GameResult/GameResult.js","store/actions/gameAction.js","pages/SignIn/SignIn.js","pages/SignUp/Signup.js","components/TableScore/TableScore.js","pages/TopScores/TopScores.js","App.js","reportWebVitals.js","config/fbConfig.js","store/reducers/uiReducer.js","helpers/helpers.js","store/reducers/mapReducer.js","store/reducers/gameReducer.js","store/reducers/rootReducer.js","index.js","pages/SignIn/SignIn.module.css","components/TableScore/TableScore.module.css"],"names":["module","exports","libraries","mapOptions","styles","disableDefaultUI","lineOptions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","onLoad","marker","GuessMap","useState","lat","lng","markerCoords","setMarkerCoords","isMarkerPalced","setIsMarkerPalced","isDistanceCalculated","setIsDistanceCalculated","center","setCenter","dispatch","useDispatch","history","useHistory","userCoords","useSelector","state","map","streetViewCoords","isGameOver","game","distance","isStreetViewMarkerVisible","useLoadScript","googleMapsApiKey","isLoaded","loadError","mapRef","React","useRef","onMapLoad","useCallback","current","goToNextRound","a","randomStreetView","getRandomLocations","locations","type","coords","toFixed","onClickHandler","e","latLng","spot","className","classes","guessMap","result","calculateBtn","onClick","push","midPoint","dist","setZoom","disabled","zoom","options","position","icon","url","origin","window","google","maps","Point","scaledSize","Size","path","memo","Avatar","props","avatar","text","Modal","isOpen","ui","isModalOpen","wrapper","modal","btnClose","console","log","signedInMenuItems","signedOutMenuItems","Layout","children","isClicked","setIsClicked","auth","firebase","initials","profile","links","uid","nav","overlay","open","prev","logo","list","item","activeClassName","active","exact","to","signinList","getState","getFirebase","getAuth","signOut","then","catch","error","hamburger","StartGame","mainContent","btnNG","isEmpty","setRandomLocation","PlayerDashbord","round","score","totalScore","dashboard","LoadingSpinner","spinner","mapContainerStyle","height","width","Street","heading","enableCloseButton","fullscreenControl","imageDateControl","addressControl","showRoadLabels","GameResult","topScore","scores","getFirestore","db","userId","topScoreData","nickName","createdAt","Date","addTopScore","setDoc","doc","addTopScoreToUserProfile","collectionRef","updateDoc","endGame","go","container","index","btn","schema","yup","shape","email","password","required","min","matches","SignIn","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","title","onSubmit","data","credentials","signInWithEmailAndPassword","userCredential","errorCode","code","errorMessage","message","form","htmlFor","id","invalid","submit","SignUp","newUser","user","setUser","createUserWithEmailAndPassword","userCredentials","autor","TableScore","contanier","userName","TopScores","useFirestoreConnect","collection","orderBy","firestore","ordered","topScores","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initState","isNotificationOpen","notificationMessage","notificationColor","tagClicked","uiReducer","action","color","reason","haversine_distance","mk1","mk2","rlat1","Math","PI","rlat2","difflat","difflon","asin","sqrt","sin","cos","mapReducer","gameReducer","pow","sc","total","rootReducer","combineReducers","firebaseReducer","firestoreReducer","middlewares","thunk","withExtraArgument","store","createStore","composeWithDevTools","applyMiddleware","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.5f820d42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"guessMap\":\"GuessMap_guessMap__1zxJ6\",\"calculateBtn\":\"GuessMap_calculateBtn__1H5cD\",\"result\":\"GuessMap_result__3dWDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Modal_wrapper__14UU0\",\"modal\":\"Modal_modal__2EV2G\",\"btnClose\":\"Modal_btnClose__1wZHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameResult_container__4Q0Sl\",\"btn\":\"GameResult_btn__2Jz24\",\"returnToMenu\":\"GameResult_returnToMenu__sJOof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"StartGame_mainContent__1zNaE\",\"btnNG\":\"StartGame_btnNG__3vUhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"PlayerDashbord_dashboard__3Yw2X\",\"text\":\"PlayerDashbord_text__1zJVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoadingSpinner_wrapper__1ZO13\",\"spinner\":\"LoadingSpinner_spinner__nnU83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2A8Ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Layout_nav__e7Z21\",\"logo\":\"Layout_logo__3WbSF\",\"list\":\"Layout_list__Z5P1n\",\"signinList\":\"Layout_signinList__3Yc0z\",\"hamburger\":\"Layout_hamburger__2ZAuU\",\"item\":\"Layout_item__WQ1Nx\",\"active\":\"Layout_active__1PZGV\",\"overlay\":\"Layout_overlay__2Zu1q\",\"open\":\"Layout_open__3weOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignUp_container__cE499\",\"title\":\"SignUp_title__3jQhl\",\"form\":\"SignUp_form__34QNy\",\"error\":\"SignUp_error__WWxdn\",\"invalid\":\"SignUp_invalid__1SNs5\",\"submit\":\"SignUp_submit__3aAKz\"};","import React, { useCallback, useState } from \"react\";\nimport { GoogleMap, Marker, Polyline } from \"@react-google-maps/api\";\nimport mapstyles from \"../../mapStyles\";\nimport classes from \"./GuessMap.module.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport randomStreetView from \"random-streetview\";\nimport { useLoadScript } from \"@react-google-maps/api\";\n\nconst libraries = [\"places\"];\n\n// const containerStyle = {\n// width: \"18vw\",\n// height: \"12vw\",\n// position: \"absolute\",\n// right: \"20px\",\n// bottom: \"20px\",\n// zIndex: \"10\",\n// };\n\nconst mapOptions = {\n  styles: mapstyles,\n  disableDefaultUI: false,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst lineOptions = {\n  strokeColor: \"#00ff00\",\n  strokeOpacity: 0.8,\n  strokeWeight: 5,\n  fillColor: \"#0f0\",\n  fillOpacity: 0.35,\n  clickable: false,\n  draggable: true,\n  editable: false,\n  visible: true,\n  radius: 30000,\n  zIndex: 1,\n};\n\nconst onLoad = (marker) => {\n  // console.log(\"marker: \", marker);\n};\n\nconst GuessMap = () => {\n  const [markerCoords, setMarkerCoords] = useState({ lat: 0, lng: 0 });\n  const [isMarkerPalced, setIsMarkerPalced] = useState(false);\n  const [isDistanceCalculated, setIsDistanceCalculated] = useState(false);\n  const [center, setCenter] = useState({\n    lat: 50.0708,\n    lng: 19.9036,\n  });\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const userCoords = useSelector((state) => state.map.userCoords);\n  const streetViewCoords = useSelector((state) => state.map.streetViewCoords);\n\n  const isGameOver = useSelector((state) => state.game.isGameOver);\n  // const round = useSelector((state) => state.game.round);\n  const distance = useSelector((state) => state.map.distance);\n\n  const isStreetViewMarkerVisible = useSelector(\n    (state) => state.map.isStreetViewMarkerVisible\n  );\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAPsYGzXGaPJlX7k_PAfilNo2gfNdW7GJI\",\n    libraries,\n  });\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const guesseHandler = () => {\n    dispatch({ type: \"CALCULATE_DISTANCE\" });\n    dispatch({ type: \"TOGGLE_STREET_VIEW_MARKER_VISIBILITY_ON\" });\n    setIsDistanceCalculated(true);\n    const midPoint = {\n      lat: (userCoords.lat + streetViewCoords.lat) / 2,\n      lng: (userCoords.lng + streetViewCoords.lng) / 2,\n    };\n\n    setCenter(midPoint);\n\n    let dist = 1;\n    if (distance < 5000) {\n      dist = 2;\n    } else if (distance < 2400) {\n      dist = 4;\n    } else if (distance < 1400) {\n      dist = 6;\n    } else if (distance < 700) {\n      dist = 8;\n    }\n    mapRef.current.setZoom(dist);\n  };\n\n  const goToNextRound = async () => {\n    const locations = await randomStreetView.getRandomLocations(1);\n    dispatch({\n      type: \"SET_STREET_VIEW_COORDS\",\n      coords: { lat: locations[0][0], lng: locations[0][1] },\n    });\n    dispatch({ type: \"TOGGLE_STREET_VIEW_MARKER_VISIBILITY_OFF\" });\n    setIsDistanceCalculated(false);\n    setIsMarkerPalced(false);\n    setMarkerCoords(null);\n    dispatch({\n      type: \"NEXT_ROUND\",\n    });\n    dispatch({\n      type: \"ADD_SCORE\",\n      distance: distance.toFixed(2),\n    });\n  };\n\n  const onClickHandler = useCallback(\n    (e) => {\n      const lat = e.latLng.lat();\n      const lng = e.latLng.lng();\n\n      setMarkerCoords({ lat, lng });\n      setIsMarkerPalced(true);\n      dispatch({ type: \"SET_USER_COORDS\", spot: { lat, lng } });\n    },\n    [dispatch]\n  );\n\n  const endGame = () => {\n    dispatch({ type: \"TOGGLE_STREET_VIEW_MARKER_VISIBILITY_OFF\" });\n    dispatch({\n      type: \"ADD_SCORE\",\n      distance: distance.toFixed(2),\n    });\n    history.push(\"gameResult\");\n  };\n\n  // const nextMapHandler = async () => {\n  //   const locations = await randomStreetView.getRandomLocations(1);\n  //   dispatch({\n  //     type: \"SET_STREET_VIEW_COORDS\",\n  //     coords: { lat: locations[0][0], lng: locations[0][1] },\n  //   });\n  //   dispatch({ type: \"TOGGLE_STREET_VIEW_MARKER_VISIBILITY\" });\n  //   mapRef.current.panTo({ lat: locations[0][0], lng: locations[0][1] });\n  // };\n\n  if (loadError) return \"error loading map\";\n  if (!isLoaded) return \"loading map\";\n\n  return (\n    <div className={classes.guessMap}>\n      {isDistanceCalculated && (\n        <p className={classes.result}>\n          Your guess was: <span>{distance.toFixed(2)} km</span> from current\n          location\n        </p>\n      )}\n      <button\n        className={classes.calculateBtn}\n        onClick={\n          isDistanceCalculated\n            ? isGameOver\n              ? endGame\n              : goToNextRound\n            : guesseHandler\n        }\n        disabled={!isMarkerPalced}\n      >\n        {isDistanceCalculated\n          ? isGameOver\n            ? \"End Game\"\n            : \"Go To Next Round\"\n          : isMarkerPalced\n          ? \"Guess\"\n          : \"Place your pin on the map\"}\n      </button>\n      <GoogleMap\n        // mapContainerStyle={containerStyle}\n        center={center}\n        zoom={3}\n        options={mapOptions}\n        onClick={(e) => {\n          onClickHandler(e);\n        }}\n        onLoad={onMapLoad}\n      >\n        <Marker\n          onLoad={onLoad}\n          position={markerCoords}\n          icon={{\n            url: \"/map-pin-solid.svg\",\n            origin: new window.google.maps.Point(0, 0),\n            scaledSize: new window.google.maps.Size(20, 50),\n          }}\n        />\n        <Marker\n          onLoad={onLoad}\n          position={streetViewCoords}\n          visible={isStreetViewMarkerVisible}\n          icon={{\n            url: \"/map-pin-solid.svg\",\n            origin: new window.google.maps.Point(0, 0),\n            scaledSize: new window.google.maps.Size(20, 50),\n          }}\n        />\n        <Polyline\n          path={[streetViewCoords, userCoords]}\n          options={lineOptions}\n          visible={isStreetViewMarkerVisible}\n        />\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default React.memo(GuessMap);\n","export default [\n  // {\n  //   featureType: \"administrative\",\n  //   elementType: \"geometry\",\n  //   stylers: [\n  //     {\n  //       weight: 0.6,\n  //     },\n  //     {\n  //       color: \"#1a3541\",\n  //     },\n  //   ],\n  // },\n];\n","import React from \"react\";\nimport classes from \"./Avatar.module.css\";\n\nconst Avatar = (props) => {\n  return <div className={classes.avatar}>{props.text}</div>;\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./Modal.module.css\";\n\nconst Modal = () => {\n  const isOpen = useSelector((state) => state.ui.isModalOpen);\n  const dispatch = useDispatch();\n\n  const clickHandler = (e) => {\n    console.log(e.type);\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  const modal = isOpen ? (\n    <div className={classes.wrapper}>\n      <div className={classes.modal}>\n        <p>if you want to play sign in first or sign up </p>\n        <p>for lazy users:</p>\n        <p>\n          email: user1@gmail.com <br /> password: pass1234\n        </p>\n        <button className={classes.btnClose} onClick={clickHandler}>\n          <span></span>\n          <span></span>\n        </button>\n      </div>\n    </div>\n  ) : null;\n\n  return modal;\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n\nimport { signOuting } from \"../../store/actions/authActions\";\nimport classes from \"./Layout.module.css\";\nimport Avatar from \"../Avatar/Avatar\";\nimport Modal from \"../../UI/Modal/Modal\";\n\nconst signedInMenuItems = [\n  {\n    text: \"avatar\",\n  },\n  {\n    text: \"Logout\",\n    path: \"/\",\n  },\n];\n\nconst signedOutMenuItems = [\n  {\n    text: \"Sign In\",\n    path: \"/signIn\",\n  },\n  {\n    text: \"Sign Up\",\n    path: \"/signUp\",\n  },\n];\n\nconst Layout = ({ children }) => {\n  const [isClicked, setIsClicked] = useState(false);\n\n  const auth = useSelector((state) => state.firebase.auth);\n  const initials = useSelector((state) => state.firebase.profile.initials);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const links = auth.uid ? signedInMenuItems : signedOutMenuItems;\n\n  return (\n    <div>\n      <Modal />\n      <nav className={classes.nav}>\n        <div\n          className={`${classes.overlay} ${isClicked ? classes.open : \"\"}`}\n          onClick={() => setIsClicked((prev) => !prev)}\n        ></div>\n        <div className={classes.logo} onClick={() => history.push(\"/\")}>\n          GeoGuesser\n        </div>\n        <ul className={`${classes.list} ${isClicked ? classes.open : \"\"}`}>\n          <li className={classes.item}>\n            <NavLink activeClassName={classes.active} exact to=\"/\">\n              HOME\n            </NavLink>\n          </li>\n          <li className={classes.item}>\n            <NavLink activeClassName={classes.active} to=\"/TopScores\">\n              TOP SCORES\n            </NavLink>\n          </li>\n          <li className={classes.item}>\n            <NavLink activeClassName={classes.active} to=\"/About\">\n              ABOUT\n            </NavLink>\n          </li>\n        </ul>\n        <ul\n          className={`${classes.signinList} ${isClicked ? classes.open : \"\"}`}\n        >\n          {links.map((item) => (\n            <li\n              className={item.text === \"avatar\" ? classes.avatar : classes.item}\n              onClick={\n                item.text === \"Logout\"\n                  ? () => dispatch(signOuting())\n                  : () => history.push(item.path)\n              }\n            >\n              {item.text === \"avatar\" ? (\n                <Avatar text={initials} />\n              ) : (\n                <p>{item.text}</p>\n              )}\n            </li>\n          ))}\n        </ul>\n\n        <span\n          className={classes.hamburger}\n          onClick={() => setIsClicked((prev) => !prev)}\n        >\n          <i></i>\n          <i></i>\n          <i></i>\n        </span>\n      </nav>\n\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","import {\n  getAuth,\n  signInWithEmailAndPassword,\n  signOut,\n  createUserWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { setDoc, doc } from \"@firebase/firestore\";\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const auth = getAuth();\n\n    signInWithEmailAndPassword(auth, credentials.email, credentials.password)\n      .then((userCredential) => {\n        // Signed in\n        // const user = userCredential.user;\n        // dispatch({ type: \"LOGIN_SUCCESS\", auth });\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(\"errorCode: \" + errorCode, \"errorMessage: \" + errorMessage);\n        // dispatch({ type: \"LOGIN_ERROR\", error });\n      });\n  };\n};\n\nexport const signOuting = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const auth = getAuth();\n\n    signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n        // dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n};\n\n//dodajemy nowego usera w authentication i tworzymy nowa kolekcje userów z extra danymi\n// w kolekcji userów nie generujemy id ale ustawiamy takie jak ma user w authentication tj uid\n//addoc() dodaje dokument z wygenerowanym id a doc dodaje dokument gdzie ustawiamy id a w set() ustawiamy properties dokmentu\nexport const signUp = (newUser) => {\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const auth = getAuth();\n    const db = getFirestore();\n\n    const user = {\n      nickName: newUser.nickName,\n      // lastName: newUser.lastName,\n      initials: newUser.nickName[0],\n      topScore: 0,\n    };\n\n    const setUser = async () => {\n      const userCredentials = await createUserWithEmailAndPassword(\n        auth,\n        newUser.email,\n        newUser.password\n      );\n      await setDoc(doc(db, \"users\", userCredentials.user.uid), user);\n    };\n\n    try {\n      await setUser();\n      // dispatch({ type: \"SIGNUP_SUCCESS\" });\n    } catch (error) {\n      console.log(error);\n      // dispatch({ type: \"SIGNUP_ERROR\", error });\n    }\n  };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { setRandomLocation } from \"../../store/actions/mapActions\";\nimport classes from \"./StartGame.module.css\";\n\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\n\nexport const StartGame = () => {\n  const auth = useSelector((state) => state.firebase.auth);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    if (isLoaded(auth) && !isEmpty(auth)) {\n      dispatch(setRandomLocation());\n      history.push(\"newGame\");\n    } else {\n      dispatch({ type: \"OPEN_MODAL\" });\n    }\n  };\n\n  return (\n    <section className={classes.mainContent}>\n      <button className={classes.btnNG} onClick={clickHandler}>\n        <a>new game</a>\n      </button>\n    </section>\n  );\n};\n","import randomStreetView from \"random-streetview\";\n\nexport const setRandomLocation = () => {\n  return async (dispatch) => {\n    const setRandomLocation = async () => {\n      console.log(\"map action\");\n      const locations = await randomStreetView.getRandomLocations(1);\n      dispatch({\n        type: \"SET_STREET_VIEW_COORDS\",\n        coords: { lat: locations[0][0], lng: locations[0][1] },\n      });\n    };\n\n    try {\n      await setRandomLocation();\n    } catch (err) {}\n  };\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./PlayerDashbord.module.css\";\n\nconst PlayerDashbord = () => {\n  const round = useSelector((state) => state.game.round);\n  const score = useSelector((state) => state.game.totalScore);\n\n  return (\n    <div className={classes.dashboard}>\n      <div className={classes.text}>\n        <p>map</p>\n        <p>round</p>\n        <p>score</p>\n        <p>World</p>\n        <p>{round}/5</p>\n        <p>{score.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerDashbord;\n","import classes from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = () => {\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.spinner}></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { GoogleMap, StreetViewPanorama } from \"@react-google-maps/api\";\nimport { useLoadScript } from \"@react-google-maps/api\";\n\nimport PlayerDashbord from \"../../components/PlayerDashbord/PlayerDashbord\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner/LoadingSpinner\";\n\nconst libraries = [\"places\"];\n\nconst mapContainerStyle = {\n  height: \"90vh\",\n  width: \"100vw\",\n};\n\nconst Street = () => {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAPsYGzXGaPJlX7k_PAfilNo2gfNdW7GJI\",\n    libraries,\n  });\n  const streetViewCoords = useSelector((state) => state.map.streetViewCoords);\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  if (loadError) return \"error loading map\";\n  if (!isLoaded) return <LoadingSpinner />;\n\n  return (\n    <div>\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        center={streetViewCoords}\n        zoom={10}\n        heading={false}\n        onLoad={onMapLoad}\n      >\n        <StreetViewPanorama\n          position={streetViewCoords}\n          visible={true}\n          options={{\n            enableCloseButton: false,\n            fullscreenControl: false,\n            imageDateControl: false,\n            addressControl: false,\n            disableDefaultUI: false,\n            showRoadLabels: false,\n          }}\n        />\n      </GoogleMap>\n\n      <PlayerDashbord />\n    </div>\n  );\n};\n\nexport default React.memo(Street);\n","import React, { useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n// import * as yup from \"yup\";\n\nimport classes from \"./GameResult.module.css\";\nimport { addTopScore } from \"../../store/actions/gameAction\";\n\n// const schema = yup.object().shape({\n//   autor: yup.string().required(),\n//   quote: yup\n//     .string()\n//     .required(\"you must enter your name\")\n//     .min(3, \"name is too short - should be 3 chars minimum.\")\n//     .matches(/[a-zA-Z]/, \"quote can only contain Latin letters.\"),\n// });\n\nconst GameResult = ({ onLoad }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const score = useSelector((state) => state.game.totalScore);\n  const scores = useSelector((state) => state.game.scores);\n\n  dispatch(addTopScore(score));\n\n  const endGame = async () => {\n    history.push(\"/\");\n    history.go(0);\n  };\n\n  return (\n    <div className={classes.container}>\n      <p>podsumowanie</p>\n      <p> game score: {score.toFixed(2)}</p>\n      {scores.map((score, index) => (\n        <p>\n          guess {index + 1}: score: {score.score} distance: {score.distance}\n        </p>\n      ))}\n\n      <button className={classes.btn} onClick={endGame}>\n        return to main menu\n      </button>\n      <button className={classes.btn} onClick={endGame}>\n        play again\n      </button>\n    </div>\n  );\n};\n\nexport default GameResult;\n","import { doc, setDoc, updateDoc } from \"@firebase/firestore\";\n\nexport const addTopScore = (topScore) => {\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const db = getFirestore();\n\n    const userId = getState().firebase.auth.uid;\n    const profile = getState().firebase.profile;\n\n    const topScoreData = {\n      topScore,\n      nickName: profile.nickName,\n      createdAt: new Date(),\n    };\n\n    const addTopScore = async () => {\n      await setDoc(doc(db, \"topScores\", userId), topScoreData);\n    };\n    const addTopScoreToUserProfile = async () => {\n      const collectionRef = doc(db, `users`, userId);\n      await updateDoc(collectionRef, {\n        topScore: topScore,\n      });\n    };\n\n    try {\n      if (topScore > profile.topScore) {\n        await addTopScore();\n        await addTopScoreToUserProfile();\n      }\n      //  dispatch({ type: \"CREATE_PROJECT\", note });\n      // dispatch({ type: \"OPEN_NOTIFICATION\", message: \"note was created\" });\n    } catch (err) {\n      // dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      console.log(\"error add score, \", err);\n    }\n  };\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router\";\nimport { signIn } from \"../../store/actions/authActions\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport classes from \"./SignIn.module.css\";\n\nconst schema = yup.object().shape({\n  email: yup.string().email(),\n  password: yup\n    .string()\n    .required(\"No password provided.\")\n    .min(8, \"password is too short - should be 6 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"quote can only contain Latin letters.\"),\n});\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n  // const authError = useSelector((state) => state.auth.authError);\n  const auth = useSelector((state) => state.firebase.auth);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  if (isLoaded(auth) && !isEmpty(auth)) return <Redirect to=\"/\" />;\n\n  const submintHandler = (data) => {\n    const email = data.email;\n    const password = data.password;\n    dispatch(signIn({ email, password }));\n    reset();\n  };\n\n  return (\n    <div className={classes.container}>\n      <p className={classes.title}> Log In</p>\n\n      <form onSubmit={handleSubmit(submintHandler)} className={classes.form}>\n        <label htmlFor=\"email\">email </label>\n        <input\n          {...register(\"email\")}\n          type=\"text\"\n          id=\"email\"\n          className={errors.email && classes.invalid}\n        />\n        <p className={classes.error}>{errors.email?.message}</p>\n\n        <label htmlFor=\"password\">password </label>\n        <input\n          {...register(\"password\")}\n          type=\"password\"\n          id=\"password\"\n          className={errors.password && classes.invalid}\n        />\n        <p className={classes.error}>{errors.password?.message}</p>\n\n        <button type=\"submit\" className={classes.submit}>\n          zaloguj sie\n        </button>\n        {/* <div className=\"\">{authError ? <p>{authError}</p> : null}</div> */}\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router\";\n\nimport { signUp } from \"../../store/actions/authActions\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport classes from \"./SignUp.module.css\";\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(\"No email provided.\"),\n  password: yup\n    .string()\n    .required(\"No password provided.\")\n    .min(8, \"password is too short - should be 6 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"quote can only contain Latin letters.\"),\n  nickName: yup.string().required(\"No first name provided.\"),\n});\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  // const authError = useSelector((state) => state.auth.authError);\n  const auth = useSelector((state) => state.firebase.auth);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  if (isLoaded(auth) && !isEmpty(auth)) return <Redirect to=\"/\" />;\n\n  const submintHandler = (data) => {\n    dispatch(\n      signUp({\n        email: data.email,\n        password: data.password,\n        nickName: data.nickName,\n      })\n    );\n    reset();\n  };\n  return (\n    <div className={classes.container}>\n      <p className={classes.title}> Zarerejestruj się</p>\n\n      <form onSubmit={handleSubmit(submintHandler)} className={classes.form}>\n        <label htmlFor=\"email\">email </label>\n        <input\n          {...register(\"email\")}\n          type=\"text\"\n          id=\"email\"\n          className={errors.autor && classes.invalid}\n        />\n        <p className={classes.error}>{errors.email?.message}</p>\n\n        <label htmlFor=\"password\">password </label>\n        <input\n          {...register(\"password\")}\n          type=\"password\"\n          id=\"password\"\n          className={errors.autor && classes.invalid}\n        />\n        <p className={classes.error}>{errors.password?.message}</p>\n        <label htmlFor=\"nickName\">nick name </label>\n        <input\n          {...register(\"nickName\")}\n          type=\"text\"\n          id=\"nickName\"\n          className={errors.autor && classes.invalid}\n        />\n        <p className={classes.error}>{errors.nickName?.message}</p>\n\n        <button type=\"submit\" className={classes.submit}>\n          zarejestruj się\n        </button>\n        {/* <div className=\"\">{authError ? <p>{authError}</p> : null}</div> */}\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport classes from \"./TableScore.module.css\";\n\nconst TableScore = (props) => {\n  return (\n    <div className={classes.contanier}>\n      <p className={classes.title}>Highscores</p>\n      <ol className={classes.list}>\n        {props.scores &&\n          props.scores.map((score, index) => (\n            <li>\n              <span>{index + 1}. </span>\n              <span className={classes.userName}>{score.nickName}</span>\n              <span className={classes.score}>{score.topScore}</span>\n            </li>\n          ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default TableScore;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, useFirestoreConnect } from \"react-redux-firebase\";\nimport TableScore from \"../../components/TableScore/TableScore\";\n\nconst TopScores = () => {\n  useFirestoreConnect([\n    {\n      collection: \"topScores\",\n      orderBy: [\"topScore\", \"desc\"],\n    },\n  ]);\n\n  const scores = useSelector((state) => state.firestore.ordered.topScores);\n  return <div>{<TableScore scores={scores} />}</div>;\n};\n\nexport default TopScores;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n// Components imports\nimport GuessMap from \"./components/GuessMap.js/GuessMap\";\nimport Layout from \"./components/Layout/Layout\";\nimport { StartGame } from \"./pages/StartGame/StartGame\";\nimport Street from \"./pages/StreetView/StreetView\";\nimport GameResult from \"./pages/GameResult/GameResult\";\nimport SignIn from \"./pages/SignIn/SignIn\";\nimport SignUp from \"./pages/SignUp/Signup\";\nimport TopScores from \"./pages/TopScores/TopScores\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  // useSelector((state) => console.log(state.firebase));\n\n  return (\n    <BrowserRouter basename=\"geoguesser\">\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\">\n            <StartGame />\n          </Route>\n          <Route path=\"/newGame\">\n            <Street />\n            <GuessMap />\n          </Route>\n          <Route path=\"/gameResult\">\n            <GameResult />\n          </Route>\n          <Route path=\"/topScores\">\n            <TopScores />\n          </Route>\n          <Route path=\"/signin\">\n            <SignIn />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAPsYGzXGaPJlX7k_PAfilNo2gfNdW7GJI\",\n  authDomain: \"geoguesser-331612.firebaseapp.com\",\n  projectId: \"geoguesser-331612\",\n  storageBucket: \"geoguesser-331612.appspot.com\",\n  messagingSenderId: \"784845408095\",\n  appId: \"1:784845408095:web:a85ee2d18a809ae2be98ea\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n","const initState = {\n  isNotificationOpen: false,\n  notificationMessage: \"\",\n  notificationColor: \"success\",\n  tagClicked: \"All\",\n  isModalOpen: false,\n};\n\nconst uiReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"OPEN_NOTIFICATION\":\n      return {\n        ...state,\n        isNotificationOpen: true,\n        notificationMessage: action.message,\n        notificationColor: action.color,\n      };\n    case \"CLOSE_NOTIFICATION\":\n      if (action.reason === \"clickaway\") {\n        return { ...state, isNotificationOpen: true };\n      }\n      return { ...state, isNotificationOpen: false };\n    case \"OPEN_MODAL\":\n      return { ...state, isModalOpen: true };\n    case \"CLOSE_MODAL\":\n      return { ...state, isModalOpen: false };\n    // case \"TAG_CLICKED\":\n    // if (action.tag === \"clickaway\") {\n    //   return { ...state, isNotificationOpen: true };\n    // }\n    // return { ...state, tagClicked: action.tag };\n    default:\n      return state;\n  }\n};\nexport default uiReducer;\n","import randomStreetView from \"random-streetview\";\n\nexport const haversine_distance = (mk1, mk2) => {\n  // const R = 6371.071; // Radius of the Earth in kilometers\n  const R = 3958.75;\n  const rlat1 = mk1.lat * (Math.PI / 180); // Convert degrees to radians\n  const rlat2 = mk2.lat * (Math.PI / 180); // Convert degrees to radians\n  const difflat = rlat2 - rlat1; // Radian difference (latitudes)\n  const difflon = (mk2.lng - mk1.lng) * (Math.PI / 180); // Radian difference (longitudes)\n\n  const d =\n    2 *\n    R *\n    Math.asin(\n      Math.sqrt(\n        Math.sin(difflat / 2) * Math.sin(difflat / 2) +\n          Math.cos(rlat1) *\n            Math.cos(rlat2) *\n            Math.sin(difflon / 2) *\n            Math.sin(difflon / 2)\n      )\n    );\n  return d;\n};\n\nexport const getRandomLocation = async () => {\n  const locations = await randomStreetView.getRandomLocations(1);\n  return { lat: locations[0][0], lng: locations[0][1] };\n};\n","import { haversine_distance } from \"../../helpers/helpers\";\n// import randomStreetView from \"random-streetview\";\n// import { getRandomLocation } from \"../../helpers/helpers\";\n\n// const locations = getRandomLocation();\n\nconst initState = {\n  streetViewCoords: {\n    lat: 50.07056,\n    lng: 18.90411,\n  },\n  distance: 0,\n  userCoords: {\n    lat: 50.07056,\n    lng: 18.90411,\n  },\n  isStreetViewMarkerVisible: false,\n};\n\nconst mapReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"SET_STREET_VIEW_COORDS\":\n      return {\n        ...state,\n        streetViewCoords: action.coords,\n      };\n    case \"CALCULATE_DISTANCE\":\n      const distance = haversine_distance(\n        state.streetViewCoords,\n        state.userCoords\n      );\n      return {\n        ...state,\n        distance: distance,\n      };\n    case \"SET_USER_COORDS\":\n      return {\n        ...state,\n        userCoords: action.spot,\n      };\n    case \"TOGGLE_STREET_VIEW_MARKER_VISIBILITY_ON\":\n      return {\n        ...state,\n        isStreetViewMarkerVisible: true,\n      };\n    case \"TOGGLE_STREET_VIEW_MARKER_VISIBILITY_OFF\":\n      return {\n        ...state,\n        isStreetViewMarkerVisible: false,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default mapReducer;\n","const initState = {\n  isGameOver: false,\n  round: 1,\n  totalScore: 0,\n  scores: [],\n};\n\nconst gameReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"NEXT_ROUND\":\n      return {\n        ...state,\n        round: state.round + 1,\n        isGameOver: state.round >= 4 ? true : false,\n      };\n    case \"ADD_SCORE\":\n      const score = 4999.91 * Math.pow(0.998036, action.distance);\n      const sc = score.toFixed(2) * 1;\n      const total = state.totalScore + sc;\n      const totalScore = total.toFixed(2) * 1;\n      console.log(state.scores, sc);\n\n      return {\n        ...state,\n        scores: [...state.scores, { score: sc, distance: action.distance }],\n        totalScore: totalScore,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default gameReducer;\n","import { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport uiReducer from \"./uiReducer\";\nimport mapReducer from \"./mapReducer\";\nimport gameReducer from \"./gameReducer\";\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n  map: mapReducer,\n  ui: uiReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport { getFirestore } from \"@firebase/firestore\";\nimport firebase from \"firebase/compat/app\";\nimport \"./config/fbConfig\"; // importujemy tak zeby sie połaczenie z firebase zainicjalizowało\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n};\n\nconst initialState = {};\n\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        {/* <AuthIsLoaded> */}\n        <App />\n        {/* </AuthIsLoaded> */}\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignIn_container__kW9Ar\",\"title\":\"SignIn_title__2u6Nv\",\"form\":\"SignIn_form__1Q3Ky\",\"error\":\"SignIn_error__1O-yq\",\"invalid\":\"SignIn_invalid__1z4t-\",\"submit\":\"SignIn_submit__2_BQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contanier\":\"TableScore_contanier__3Hj1M\",\"title\":\"TableScore_title__2seWp\",\"list\":\"TableScore_list__2O4le\"};"],"sourceRoot":""}